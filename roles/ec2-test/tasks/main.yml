---
# - name: get eni
#   action: ec2_eni_facts

## Conditional example
# - name: Gather facts
#   action: ec2_facts
#   register: out

# - name: show output
#   debug: var=out
 
# - name: show output
#   debug: var=ec2_out.ansible_ec2_mac
 
# Gather facts about a particular VPC using VPC ID
#  - ec2_vpc_net_facts:
   - name: check
     ec2_eni_facts:
#    filters:
#      vpc-id: vpc-e849158d 


# - name: testing uptime
#   shell: /usr/bin/uptime
#   register: out_uptime

# - name: show uptime
#   debug: var=out_uptime

# - name: install useful system tools
#   apt: name={{ item }} state=present
#   with_items:
#     - vim
#     - nano
#     - htop
#     - git
#     - openjdk-6-jdk
#     - openjdk-8-jdk
#     - mysql-client-core-5.6

# update_cache=true


#- name: Installs nginx web server
#  apt: pkg=nginx state=installed update_cache=true
#  notify:
#    - start nginx
# - name: upload simple static file bar.txt
#   copy: src=bar.txt dest=./ mode=0644
#   register: out_copy
#  ignore_errors: True

# - name: show simple upload output
#   debug: var=out_copy

# copy a 'populated' template
# - name: creates the checkWebsite.py file from j2 template
#   template: src=checkWebsite.py.j2 dest=./checkWebsite.py mode=0777
#   register: out_copy_template

# - name: show dynamic script building using j2 template
#   debug: var=out_copy_template

# - name: execute checkWebsite.py will check http from remote host
#   command: ./checkWebsite.py
#   register: out_exec

# - name: show script execution output
#   debug: var=out_exec




# examples 
#---
#- name: Transfer and execute a script.
#  hosts: server
#  remote_user: test_user
#  sudo: yes
#  tasks:
#     - name: Transfer the script
#      copy: src=test.sh dest=/home/test_user mode=0777

#     - name: Execute the script
#       command: sh /home/test_user/test.sh





# - name: using maven to get a basic project
#   maven_artifact: group_id=org.apache.maven.archetypes artifact_id=maven-archetype-quickstart dest=./mvn-template.jar

#- maven_artifact: group_id=junit artifact_id=junit dest=/tmp/junit-latest.jar

# Download JUnit 4.11 from Maven Central
# - maven_artifact: group_id=junit artifact_id=junit version=4.11 dest=/tmp/junit-4.11.jar

# Download an artifact from a private repository requiring authentication
# - maven_artifact: group_id=com.company artifact_id=library-name repository_url=https://repo.company.com/maven username=user password=pass dest=/tmp/library-name-latest.jar

# Download a WAR File to the Tomcat webapps directory to be deployed
#- maven_artifact: group_id=com.company artifact_id=web-app extension=war repository_url=https://repo.company.com/maven dest=/var/lib/tomcat7/webapps/web-app.war


#- name: Copy the code from repository
#  git: repo={{ repository }} dest=/var/www/html/

#- name: Upload default index.php for host
#  copy: src=static_files/index.php dest=/usr/share/nginx/www/ mode=0644
#  register: php
#  ignore_errors: True
#
#- name: Remove index.html for host
#  command: rm /usr/share/nginx/www/index.html
#  when: php|success
#
#- name: Upload default index.html for host
#  copy: src=static_files/index.html dest=/usr/share/nginx/www/ mode=0644
#  when: php|failed
#
#  <-- tasks file can include smaller files if warranted

