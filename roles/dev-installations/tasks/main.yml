---
 - name: test by ping
   shell: /usr/bin/uptime
   register: result

 - name: show result
   debug: var=result

 - name: Install useful system tools
   apt: name={{ item }} state=present
   with_items:
     - vim
     - nano
     - htop
     - git
     - openjdk-6-jdk
     - openjdk-8-jdk
     - mysql-client-core-5.6

# update_cache=true


#- name: Installs nginx web server
#  apt: pkg=nginx state=installed update_cache=true
#  notify:
#    - start nginx
 - name: Upload file bar.txt
   copy: src=bar.txt dest=./ mode=0644
   register: out_copy1
#  ignore_errors: True

 - name: show upload result
   debug: var=out_copy1

# copy a 'populated' template
 - name: Creates the checkWebsite.py file 
   template: src=checkWebsite.py.j2 dest=./checkWebsite.py mode=0777
   register: out_copy2

 - name: show dynamic script building result
   debug: var=out_copy2

 - name: run checkWebsite.py will check http from remote host
   shell: src=checkWebsite.py.j2 dest=./checkWebsite.py mode=0777
   register: out_copy2

 - name: show dynamic script building result
   debug: var=out_copy2


# - name: using maven to get a basic project
#   maven_artifact: group_id=org.apache.maven.archetypes artifact_id=maven-archetype-quickstart dest=./mvn-template.jar

#- maven_artifact: group_id=junit artifact_id=junit dest=/tmp/junit-latest.jar

# Download JUnit 4.11 from Maven Central
# - maven_artifact: group_id=junit artifact_id=junit version=4.11 dest=/tmp/junit-4.11.jar

# Download an artifact from a private repository requiring authentication
# - maven_artifact: group_id=com.company artifact_id=library-name repository_url=https://repo.company.com/maven username=user password=pass dest=/tmp/library-name-latest.jar

# Download a WAR File to the Tomcat webapps directory to be deployed
#- maven_artifact: group_id=com.company artifact_id=web-app extension=war repository_url=https://repo.company.com/maven dest=/var/lib/tomcat7/webapps/web-app.war


#- name: Copy the code from repository
#  git: repo={{ repository }} dest=/var/www/html/

#- name: Upload default index.php for host
#  copy: src=static_files/index.php dest=/usr/share/nginx/www/ mode=0644
#  register: php
#  ignore_errors: True
#
#- name: Remove index.html for host
#  command: rm /usr/share/nginx/www/index.html
#  when: php|success
#
#- name: Upload default index.html for host
#  copy: src=static_files/index.html dest=/usr/share/nginx/www/ mode=0644
#  when: php|failed
#
#  <-- tasks file can include smaller files if warranted

